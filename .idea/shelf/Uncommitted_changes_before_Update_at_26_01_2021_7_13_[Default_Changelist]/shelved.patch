Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(revision 5cfb9379462fac735a7e1fe3dd04b1914a9df979)
+++ .idea/vcs.xml	(date 1611634411179)
@@ -2,5 +2,6 @@
 <project version="4">
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/skimmer" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"888bede8-a8a5-45cb-b9a5-dcb0955036c4\" name=\"Default Changelist\" comment=\"вывод списка каталогов и файлов\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" path=\"C:\\Go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1ggnxIeN2KphALZyng0fI0zz9pB\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"DefaultGoTemplateProperty\" value=\"Go File\" />\r\n    <property name=\"GO_FMT\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"go.import.settings.migrated\" value=\"true\" />\r\n    <property name=\"go.sdk.automatically.set\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Go Build.go build github.com/Aleksandr-Kai/golang/hw1_tree\">\r\n    <configuration name=\"go build github.com/Aleksandr-Kai/golang/hw1_tree\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"golang\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <filePath value=\"$PROJECT_DIR$/hw1_tree/main.go\" />\r\n      <package value=\"github.com/Aleksandr-Kai/golang/hw1_tree\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"go build github.com/Aleksandr-Kai/golang/lesson1\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"golang\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <filePath value=\"$PROJECT_DIR$/lesson1/go.go\" />\r\n      <package value=\"github.com/Aleksandr-Kai/golang/lesson1\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build github.com/Aleksandr-Kai/golang/hw1_tree\" />\r\n        <item itemvalue=\"Go Build.go build github.com/Aleksandr-Kai/golang/lesson1\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"888bede8-a8a5-45cb-b9a5-dcb0955036c4\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1598545347234</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1598545347234</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"asdf\">\r\n      <created>1598682999347</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1598682999347</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"coursera новое задение\">\r\n      <created>1598773429788</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1598773429788</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"вывод списка каталогов и файлов\">\r\n      <created>1598777172696</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1598777172696</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"1\">\r\n          <value>\r\n            <State>\r\n              <option name=\"SHOW_ONLY_AFFECTED_CHANGES\" value=\"true\" />\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"HEAD\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                  <entry key=\"roots\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"$PROJECT_DIR$\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"1\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"asdf\" />\r\n    <MESSAGE value=\"coursera новое задение\" />\r\n    <MESSAGE value=\"вывод списка каталогов и файлов\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"вывод списка каталогов и файлов\" />\r\n  </component>\r\n  <component name=\"WindowStateProjectService\">\r\n    <state x=\"740\" y=\"279\" key=\"FileChooserDialogImpl\" timestamp=\"1598636456375\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state x=\"740\" y=\"279\" key=\"FileChooserDialogImpl/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598636456375\" />\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1598777287496\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598777287496\" />\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.center\" timestamp=\"1598777287495\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598777287495\" />\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.left\" timestamp=\"1598777287495\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598777287495\" />\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.right\" timestamp=\"1598777287496\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state width=\"1877\" height=\"285\" key=\"GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598777287496\" />\r\n    <state x=\"552\" y=\"257\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1598773354340\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state x=\"552\" y=\"257\" key=\"Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598773354340\" />\r\n    <state x=\"777\" y=\"438\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1598625953449\">\r\n      <screen x=\"0\" y=\"0\" width=\"1920\" height=\"1050\" />\r\n    </state>\r\n    <state x=\"777\" y=\"438\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050\" timestamp=\"1598625953449\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 5cfb9379462fac735a7e1fe3dd04b1914a9df979)
+++ .idea/workspace.xml	(date 1611634411129)
@@ -6,6 +6,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="888bede8-a8a5-45cb-b9a5-dcb0955036c4" name="Default Changelist" comment="вывод списка каталогов и файлов">
+      <change afterPath="$PROJECT_DIR$/hw2_signer/cover.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/hw2_signer/cover.out" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/serial/main.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -158,22 +161,22 @@
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
     <state x="740" y="279" key="FileChooserDialogImpl/0.0.1920.1050@0.0.1920.1050" timestamp="1598636456375" />
-    <state width="1877" height="285" key="GridCell.Tab.0.bottom" timestamp="1598777287496">
+    <state width="1876" height="281" key="GridCell.Tab.0.bottom" timestamp="1601364726745">
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
-    <state width="1877" height="285" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1598777287496" />
-    <state width="1877" height="285" key="GridCell.Tab.0.center" timestamp="1598777287495">
+    <state width="1876" height="281" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1601364726745" />
+    <state width="1876" height="281" key="GridCell.Tab.0.center" timestamp="1601364726745">
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
-    <state width="1877" height="285" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1598777287495" />
-    <state width="1877" height="285" key="GridCell.Tab.0.left" timestamp="1598777287495">
+    <state width="1876" height="281" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1601364726745" />
+    <state width="1876" height="281" key="GridCell.Tab.0.left" timestamp="1601364726745">
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
-    <state width="1877" height="285" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1598777287495" />
-    <state width="1877" height="285" key="GridCell.Tab.0.right" timestamp="1598777287496">
+    <state width="1876" height="281" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1601364726745" />
+    <state width="1876" height="281" key="GridCell.Tab.0.right" timestamp="1601364726745">
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
-    <state width="1877" height="285" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1598777287496" />
+    <state width="1876" height="281" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1601364726745" />
     <state x="552" y="257" key="Vcs.Push.Dialog.v2" timestamp="1598773354340">
       <screen x="0" y="0" width="1920" height="1050" />
     </state>
Index: hw2_signer/cover.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hw2_signer/cover.html	(date 1599486267482)
+++ hw2_signer/cover.html	(date 1599486267482)
@@ -0,0 +1,287 @@
+
+<!DOCTYPE html>
+<html>
+	<head>
+		<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+		<title>hw2_signer: Go Coverage Report</title>
+		<style>
+			body {
+				background: black;
+				color: rgb(80, 80, 80);
+			}
+			body, pre, #legend span {
+				font-family: Menlo, monospace;
+				font-weight: bold;
+			}
+			#topbar {
+				background: black;
+				position: fixed;
+				top: 0; left: 0; right: 0;
+				height: 42px;
+				border-bottom: 1px solid rgb(80, 80, 80);
+			}
+			#content {
+				margin-top: 50px;
+			}
+			#nav, #legend {
+				float: left;
+				margin-left: 10px;
+			}
+			#legend {
+				margin-top: 12px;
+			}
+			#nav {
+				margin-top: 10px;
+			}
+			#legend span {
+				margin: 0 5px;
+			}
+			.cov0 { color: rgb(192, 0, 0) }
+.cov1 { color: rgb(128, 128, 128) }
+.cov2 { color: rgb(116, 140, 131) }
+.cov3 { color: rgb(104, 152, 134) }
+.cov4 { color: rgb(92, 164, 137) }
+.cov5 { color: rgb(80, 176, 140) }
+.cov6 { color: rgb(68, 188, 143) }
+.cov7 { color: rgb(56, 200, 146) }
+.cov8 { color: rgb(44, 212, 149) }
+.cov9 { color: rgb(32, 224, 152) }
+.cov10 { color: rgb(20, 236, 155) }
+
+		</style>
+	</head>
+	<body>
+		<div id="topbar">
+			<div id="nav">
+				<select id="files">
+				
+				<option value="file0">github.com/Aleksandr-Kai/golang/hw2_signer/common.go (0.0%)</option>
+				
+				<option value="file1">github.com/Aleksandr-Kai/golang/hw2_signer/signer.go (80.3%)</option>
+				
+				</select>
+			</div>
+			<div id="legend">
+				<span>not tracked</span>
+			
+				<span class="cov0">not covered</span>
+				<span class="cov8">covered</span>
+			
+			</div>
+		</div>
+		<div id="content">
+		
+		<pre class="file" id="file0" style="display: none">package main
+
+import (
+        "crypto/md5"
+        "fmt"
+        "hash/crc32"
+        "strconv"
+        "sync/atomic"
+        "time"
+)
+
+type job func(in, out chan interface{})
+
+const (
+        MaxInputDataLen = 100
+)
+
+var (
+        dataSignerOverheat uint32 = 0
+        DataSignerSalt            = ""
+)
+
+var OverheatLock = func() <span class="cov0" title="0">{
+        for </span><span class="cov0" title="0">{
+                if swapped := atomic.CompareAndSwapUint32(&amp;dataSignerOverheat, 0, 1); !swapped </span><span class="cov0" title="0">{
+                        fmt.Println("OverheatLock happend")
+                        time.Sleep(time.Second)
+                }</span> else<span class="cov0" title="0"> {
+                        break</span>
+                }
+        }
+}
+
+var OverheatUnlock = func() <span class="cov0" title="0">{
+        for </span><span class="cov0" title="0">{
+                if swapped := atomic.CompareAndSwapUint32(&amp;dataSignerOverheat, 1, 0); !swapped </span><span class="cov0" title="0">{
+                        fmt.Println("OverheatUnlock happend")
+                        time.Sleep(time.Second)
+                }</span> else<span class="cov0" title="0"> {
+                        break</span>
+                }
+        }
+}
+
+var DataSignerMd5 = func(data string) string <span class="cov0" title="0">{
+        OverheatLock()
+        defer OverheatUnlock()
+        data += DataSignerSalt
+        dataHash := fmt.Sprintf("%x", md5.Sum([]byte(data)))
+        time.Sleep(10 * time.Millisecond)
+        return dataHash
+}</span>
+
+var DataSignerCrc32 = func(data string) string <span class="cov0" title="0">{
+        data += DataSignerSalt
+        crcH := crc32.ChecksumIEEE([]byte(data))
+        dataHash := strconv.FormatUint(uint64(crcH), 10)
+        time.Sleep(time.Second)
+        return dataHash
+}</span>
+</pre>
+		
+		<pre class="file" id="file1" style="display: none">package main
+
+import (
+        "fmt"
+        "sort"
+        "strconv"
+        "strings"
+        "sync"
+        "time"
+)
+
+func SingleHash(in, out chan interface{}) <span class="cov8" title="1">{
+        wg := sync.WaitGroup{}
+        mu := &amp;sync.Mutex{}
+        for i := range in </span><span class="cov8" title="1">{
+                wg.Add(1)
+                go func(data string) </span><span class="cov8" title="1">{
+                        defer wg.Done()
+                        mdCh := make(chan string)
+                        crcCh := make(chan string)
+                        go func() </span><span class="cov8" title="1">{
+                                mu.Lock()
+                                mdCh &lt;- DataSignerMd5(data)
+                                mu.Unlock()
+                        }</span>()
+
+                        <span class="cov8" title="1">go func() </span><span class="cov8" title="1">{
+                                crcCh &lt;- DataSignerCrc32(data)
+                        }</span>()
+                        <span class="cov8" title="1">md5 := &lt;-mdCh
+                        dsMd := DataSignerCrc32(md5)
+                        ds := &lt;-crcCh
+                        res := ds + "~" + dsMd
+                        out &lt;- res</span>
+                }(strconv.Itoa(i.(int)))
+        }
+        <span class="cov8" title="1">wg.Wait()</span>
+}
+
+func MultiHash(in, out chan interface{}) <span class="cov8" title="1">{
+        wg := sync.WaitGroup{}
+        for data := range in </span><span class="cov8" title="1">{
+                wg.Add(1)
+                go func(data string) </span><span class="cov8" title="1">{
+                        defer wg.Done()
+                        arr := make([]string, 6)
+                        wgw := sync.WaitGroup{}
+
+                        for i := 0; i &lt; 6; i++ </span><span class="cov8" title="1">{
+                                wgw.Add(1)
+                                go func(th int) </span><span class="cov8" title="1">{
+                                        defer wgw.Done()
+                                        arr[th] = DataSignerCrc32(strconv.Itoa(th) + data)
+                                }</span>(i)
+                        }
+                        <span class="cov8" title="1">wgw.Wait()
+                        res := strings.Join(arr, "")
+                        out &lt;- res</span>
+                }(data.(string))
+        }
+        <span class="cov8" title="1">wg.Wait()</span>
+}
+
+func CombineResults(in, out chan interface{}) <span class="cov8" title="1">{
+        var arr []string
+        for data := range in </span><span class="cov8" title="1">{
+                arr = append(arr, data.(string))
+        }</span>
+        <span class="cov8" title="1">sort.Strings(arr)
+        res := strings.Join(arr, "_")
+        out &lt;- res</span>
+}
+
+func ExecutePipeline(jobs ...job) <span class="cov8" title="1">{
+        var wg sync.WaitGroup
+        in := make(chan interface{})
+
+        for _, jobFunc := range jobs </span><span class="cov8" title="1">{
+                wg.Add(1)
+                out := make(chan interface{})
+                go func(jobFunc job, in, out chan interface{}) </span><span class="cov8" title="1">{
+                        defer wg.Done()
+                        defer close(out)
+                        jobFunc(in, out)
+                }</span>(jobFunc, in, out)
+                <span class="cov8" title="1">in = out</span>
+        }
+        <span class="cov8" title="1">wg.Wait()</span>
+}
+
+func main() <span class="cov0" title="0">{
+        //inputData := []int{0, 1, 2, 2, 3, 5, 8}
+        inputData := []int{0, 1, 2, 3, 4, 5, 6}
+
+        hashSignJobs := []job{
+                job(func(in, out chan interface{}) </span><span class="cov0" title="0">{
+                        for _, fibNum := range inputData </span><span class="cov0" title="0">{
+                                out &lt;- fibNum
+                        }</span>
+                }),
+                job(SingleHash),
+                job(MultiHash),
+                job(CombineResults),
+                job(func(in, out chan interface{}) <span class="cov0" title="0">{
+                        dataRaw := &lt;-in
+                        data, ok := dataRaw.(string)
+                        if !ok </span><span class="cov0" title="0">{
+                                fmt.Println("cant convert result data to string")
+                        }</span>
+                        <span class="cov0" title="0">fmt.Println(data)</span>
+                }),
+        }
+
+        <span class="cov0" title="0">start := time.Now()
+
+        ExecutePipeline(hashSignJobs...)
+
+        end := time.Since(start)
+        fmt.Printf("Time: %v\n", end)</span>
+}
+</pre>
+		
+		</div>
+	</body>
+	<script>
+	(function() {
+		var files = document.getElementById('files');
+		var visible;
+		files.addEventListener('change', onChange, false);
+		function select(part) {
+			if (visible)
+				visible.style.display = 'none';
+			visible = document.getElementById(part);
+			if (!visible)
+				return;
+			files.value = part;
+			visible.style.display = 'block';
+			location.hash = part;
+		}
+		function onChange() {
+			select(files.value);
+			window.scrollTo(0, 0);
+		}
+		if (location.hash != "") {
+			select(location.hash.substr(1));
+		}
+		if (!visible) {
+			select("file0");
+		}
+	})();
+	</script>
+</html>
Index: hw2_signer/cover.out
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hw2_signer/cover.out	(date 1599486191633)
+++ hw2_signer/cover.out	(date 1599486191633)
@@ -0,0 +1,41 @@
+mode: set
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:23.27,24.6 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:24.6,25.82 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:25.82,28.4 2 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:28.9,29.9 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:34.29,35.6 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:35.6,36.82 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:36.82,39.4 2 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:39.9,40.9 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:45.46,52.2 6 0
+github.com/Aleksandr-Kai/golang/hw2_signer/common.go:54.48,60.2 5 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:12.43,15.20 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:37.2,37.11 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:15.20,17.24 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:17.24,21.14 4 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:27.4,27.14 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:30.4,34.14 5 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:21.14,25.5 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:27.14,29.5 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:40.42,42.23 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:61.2,61.11 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:42.23,44.24 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:44.24,49.27 4 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:56.4,58.14 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:49.27,51.21 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:51.21,54.6 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:64.47,66.23 2 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:69.2,71.12 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:66.23,68.3 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:74.35,78.31 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:88.2,88.11 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:78.31,81.50 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:86.3,86.11 1 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:81.50,85.4 3 1
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:91.13,96.38 2 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:114.2,119.31 4 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:96.38,97.37 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:97.37,99.5 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:104.38,107.11 3 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:110.4,110.21 1 0
+github.com/Aleksandr-Kai/golang/hw2_signer/signer.go:107.11,109.5 1 0
Index: serial/main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- serial/main.go	(date 1601384934231)
+++ serial/main.go	(date 1601384934231)
@@ -0,0 +1,97 @@
+package main
+
+import (
+	"encoding/hex"
+	"encoding/json"
+	"fmt"
+	"github.com/tarm/serial"
+	"log"
+	"strconv"
+	"strings"
+	"sync"
+	"time"
+)
+
+type Report struct {
+	Errors byte 		`json:"err"`
+	Pressure float32	`json:"p""`
+	UseWater bool		`json:"-"`
+	Pump1 bool
+	Pump2 bool
+	Pump3 bool
+	Chain string
+}
+var r Report
+var rr []Report
+var pos int
+func strWorker(str string){
+	if str != ""{
+		switch {
+		case strings.Contains(str, "END"):
+			//j, _ := json.Marshal(r)
+			//fmt.Printf("%v\n", string(j))
+			rr[pos] = r
+			pos++
+			fmt.Printf("%v\n", r)
+			j, _ := json.Marshal(rr)
+			fmt.Printf("%v\n", string(j))
+		case strings.Contains(str, "Errors"):
+			dec, _ := hex.DecodeString(strings.Split(str, "x")[1])
+			r.Errors = dec[0]
+		case strings.Contains(str, "Pressure"):
+			dec, _ := strconv.ParseFloat(strings.Split(str, " ")[1], 32)
+			r.Pressure = float32(dec)
+		case strings.Contains(str, "UseWater"):
+			dec, _ := strconv.ParseBool(strings.Split(str, " ")[1])
+			r.UseWater = dec
+		case strings.Contains(str, "Pump1"):
+			dec, _ := strconv.ParseBool(strings.Split(str, " ")[1])
+			r.Pump1 = dec
+		case strings.Contains(str, "Pump2"):
+			dec, _ := strconv.ParseBool(strings.Split(str, " ")[1])
+			r.Pump2 = dec
+		case strings.Contains(str, "Pump3"):
+			dec, _ := strconv.ParseBool(strings.Split(str, " ")[1])
+			r.Pump3 = dec
+		case strings.Contains(str, "PumpsChain"):
+			r.Chain = strings.Split(str, " ")[1]
+		default:
+			fmt.Printf("%v\n", str)
+		}
+	}
+}
+
+func Listen(wg *sync.WaitGroup){
+	defer wg.Done()
+	c := &serial.Config{Name: "COM2", Baud: 19200, ReadTimeout: 1 * time.Second}
+	s, err := serial.OpenPort(c)
+	if err != nil {
+		log.Fatal(err)
+	}
+	buf := make([]byte, 2)
+	var str string
+	for{
+		_, err := s.Read(buf)
+		if err != nil {
+			log.Fatal(err)
+		}
+		if buf[0] == '\n' || buf[0] == '\r'{
+			go strWorker(str)
+			str = ""
+		}else{
+			str += string(buf[0])
+		}
+		if pos >= 10{
+			return
+		}
+	}
+}
+
+func main(){
+	rr = make([]Report, 10)
+	pos = 0
+	wg := sync.WaitGroup{}
+	wg.Add(1)
+	go Listen(&wg)
+	wg.Wait()
+}
